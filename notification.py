import smtplib
from email.mime.text import MIMEText
from cryptography.fernet import Fernet

OUTBND_EMAIL =  'suspect.sources@gmail.com'
OUTBND_ENC_PSWD = b'gAAAAABgbavwJiy3quTfBs44koynkhs5sNYVETrSeh-aTlFl3HH8LSMvtC0-09fkvqdyTgJJ6DCbmD3nr4R6V5E7VSmtbwh8GVqTqVRU1S4LoJjM0rSPuyo='

HTML_BODY = '''
<html><body><div dir="ltr">{CONTENT}<font color="#888888"><br clear="all"><div><br></div>-- <br><div dir="ltr" data-smartmail="gmail_signature"><div dir="ltr"><div><span><br><div dir="ltr" style="margin-left:0pt" align="left"><table style="border:none;border-collapse:collapse"><colgroup><col width="245"><col width="355"></colgroup><tbody><tr style="height:0pt"><td style="border-right:solid #00b764 3pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden"><p dir="ltr" style="line-height:1.2;margin-top:0pt;margin-bottom:0pt"><span style="font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;font-weight:700;vertical-align:baseline;white-space:pre-wrap"><span style="border:none;display:inline-block;overflow:hidden;width:211px;height:111px"><img src="https://lh3.googleusercontent.com/oP6Tk9VXdNyaIiTsR81ZX8MMwDReqpr68zwObHuXB4c82ZRB_1K_vOmD9WhlGM-MMUEzXHhH_IK8tqqicgyYH5sg5E6Uh1WOVuJ-XG586Wo5oa_1LPUprqTqRkIIVMybkD080x_l" width="211" height="111" style="margin-left:0px;margin-top:0px" class="CToWUd"></span></span></p></td><td style="border-left:solid #00b764 3pt;vertical-align:top;padding:5pt 5pt 5pt 5pt;overflow:hidden"><br><p dir="ltr" style="line-height:1.2;margin-left:21.259842519685023pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:13pt;font-family:Arial;color:rgb(17,85,204);background-color:transparent;font-weight:700;vertical-align:baseline;white-space:pre-wrap">Suspect Sources System</span></p><p dir="ltr" style="line-height:1.2;margin-left:21.259842519685023pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;vertical-align:baseline;white-space:pre-wrap">National Cyber Security Centre</span></p><br><p dir="ltr" style="line-height:1.2;margin-left:21.259842519685023pt;margin-top:0pt;margin-bottom:0pt"><span style="font-size:11pt;font-family:Arial;color:rgb(0,0,0);background-color:transparent;font-weight:700;vertical-align:baseline;white-space:pre-wrap">IT Department</span></p></td></tr></tbody></table></div></span></div><div><br></div><div><br></div></div></div></font></div></body></html>
'''


try:
  loginFRetrieve = open("config/key.bin", "rb")
  retrieved_key = loginFRetrieve.read()
  loginFRetrieve.close()
except:
  print("Error retrieving key.")    

cipher = Fernet(retrieved_key)
OUTBND_PSWD = cipher.decrypt(OUTBND_ENC_PSWD)
OUTBND_PSWD = OUTBND_PSWD.decode('utf-8')


def registration_email(firstname:str, email:str, username:str, password:str) -> bool:
    '''
    Function to trigger the registration email to a new system user. Takes as input the firstname, email and autogenerated password.
    Will send an email to the email given as an arg containing the password for the user to able to login.
    '''
    SUBJECT = f'Welcome to the NCSC Suspect Sources System, {firstname}!'
    EMAIL_BODY = f"""
                <p><strong>Welcome, {firstname}</strong>!</p>
                <p>You may now log into the Suspect Sources Interface using the following credentials:</p>
                <p><span style="color: #000080;"><strong>Username:</strong></span> <strong>{username}</strong><br /> 
                <span style="color: #000080;"><strong>Password:</strong></span> <strong>{password}</strong></p>
                <p>Please note, that you will be prompted to change your password once you log into the system for the first time. This is done to enhance the security of your                     account.<br />
                Please don't hesitate to contact a system administrator or the technical support team should you run into any difficulties.</p>
                """
    
    recipient = email
    
    my_email = MIMEText(HTML_BODY.replace('{CONTENT}', EMAIL_BODY), "html")
    my_email["From"] = OUTBND_EMAIL
    my_email["To"] = email
    my_email["Subject"] = SUBJECT
    try:
        server = smtplib.SMTP("smtp.gmail.com")
        server.starttls()
        server.login(user=OUTBND_EMAIL, password=OUTBND_PSWD)
        server.sendmail(OUTBND_EMAIL, email, my_email.as_string())
    except:
        return False
    else:
        return True

    
def new_source_email(recipient_list:list, source_id:id, source_name:str, source_url:str, source_threat_level:int) -> bool:
    '''
    Function to trigger the notification when a new suspect source has been added to the system. 
    Takes as input a list of tuples containing the email:firstname pair of all users in the system with the role "Authority". 
    Furthermore, takes the information of the newly added source, such as the id, name, url and threat level.
    Will send a notification to all emails in the tuple with details of the newly added suspect source.
    
    Please note recipient_list structure should be: [('email1@email.com', 'firstname1'), ('email2@email.com', 'firstname2')]
    '''
    SUBJECT = f'New Suspect Source has been added: {source_name}!'
    
    EMAIL_BODY = f"""
                <p><strong>Dear&nbsp;FIRSTNAME,</strong></p>
                <p>This email serves as a notification that a new suspect source has been added to the NCSC Suspect Source system.</p>
                <p>Overview of the added source:</p>
                <p><span style="color: #0000ff;"><strong>Source Name:</strong></span> <strong>{source_name}</strong><br /> 
                <span style="color: #0000ff;"><strong>Source ID:</strong></span> <strong>{source_id}</strong><br /> <strong>
                <span style="color: #0000ff;"><strong>Source URL:</strong></span> {source_url}<br /> <strong>
                <span style="color: #0000ff;">Source Threat Level:</span> {source_threat_level}</strong></p>
                <p>Please log into the system and search for the threat id to obtain a full description of the newly added suspect source.</p>
                <p>Please don't hesitate to contact a system administrator or the technical support team should you run into any difficulties.</p>
                """
    
    for item in recipient_list:
        email = item[0]
        first_name = item[1]
        
        content = EMAIL_BODY.replace('FIRSTNAME', 'first_name')
        
        my_email = MIMEText(HTML_BODY.replace('{CONTENT}', content), "html")
        my_email["From"] = OUTBND_EMAIL
        my_email["To"] = email
        my_email["Subject"] = SUBJECT
    
        try:
            server = smtplib.SMTP("smtp.gmail.com")
            server.starttls()
            server.login(user=OUTBND_EMAIL, password=OUTBND_PSWD)
            server.sendmail(OUTBND_EMAIL, email, my_email.as_string())
        except:
            return False
        print(f"Sent Notification successfully to: {first_name} at {email}") # Debug Line to check email sends
    return True


def changed_password_email(firstname:str, email:str) -> bool:
    '''
    Function to trigger a notification email if the password of a user is changed. Takes as input the firstname and email of the user.
    Will send an email to the email given as an arg to confirm that the password has been changed.
    '''
    SUBJECT = f'Password Changed Successfully'
    EMAIL_BODY = f"""
                <p><strong>Dear&nbsp;{firstname},</strong></p>
                <p>This email is to notify you of a successful password change to your NCSC Suspect Sources account. 
                You are now able to log in with your username and newly set password.</p>
                <p>If you did not action this change, please contact the NCSC Administrator Team immediately. In this case, your account might be comprised.</p>
                """
    
    recipient = email
    
    my_email = MIMEText(HTML_BODY.replace('{CONTENT}', EMAIL_BODY), "html")
    my_email["From"] = OUTBND_EMAIL
    my_email["To"] = email
    my_email["Subject"] = SUBJECT
    try:
        server = smtplib.SMTP("smtp.gmail.com")
        server.starttls()
        server.login(user=OUTBND_EMAIL, password=OUTBND_PSWD)
        server.sendmail(OUTBND_EMAIL, email, my_email.as_string())
    except:
        return False
    else:
        return True
    
    
# print(registration_email('Marzio', 'marziohruschka@gmail.com', 'm.hruschka', '123456789'))
# print(new_source_email([('marziohruschka@googlemail.com', 'Marzio'), ('marziohruschka+1@gmail.com', 'Maze')], 1, '1337day', 'http://1337day.com', 4
# print(changed_password_email('Marzio', 'marziohruschka@gmail.com'))